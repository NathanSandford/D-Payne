1) Generate highres models (Kurucz)
    - linelist 
    - 100-1000 training set for training the payne
    - needs to populate region of label space where you want to be able to predict spectrum
2) Convolve highres spectra to R ~ 5000
    - convolve_highrez_spectra_to_given_R.py
    - either assume Gaussian or get it from standard stars. 
    - continuum normalize, using the same routine used for data. 
3) Train Payne on this training set. 
    - really, train a different NN for each point in label space.
    - have to decide on NN form:
        - how many layers
        - how many neurons "nodes" in each layer
        - what activation function. 
        - good rule of thumb is to use a small network if possible
    - To check if it worked, do cross validation. 
        http://cs231n.github.io/classification/
    - now you have a model that predicts what the normalized spectrum should look like for a given set of labels. 
4) To fit a real spectrum, just chi2 minimization. 
    - Payne predicts *rest frame*
    - What you actually fit for is [Teff, logg, x/H, ... and v_los]
    - Need a function to Doppler shift the rest-frame model spectrum to the observed velocity. 

Masking:
    - some lines are bad, and you don't know which ones.
    - predict spectrum for sun and arcturus and compare to the real sun and arcturus spectrum.
    - Mask out all pixels that don't agree well. 
    - Kurucz "FTS" spectrum at R~150,000
        - convolve to Deimos resolution 
        